Configure warning and error messages
------------------------------------

    - "it appears your xxx compiler does not support OpenMP.": the
      configure script did not manage to figure out how to compile
      OpenMP programs with the C compiler you provided. This could
      mean your C compiler is too old to support OpenMP (GCC
      implements OpenMP since gcc-4.2).

    - "it appears your xxx compiler does not support OpenMP task
      dependencies.": KaStORS benchmarks use the #pragma omp task
      depend (in:...) (out:...) (inout:...) directives, introduced
      since OpenMP 4.0. For example, GCC implements this features
      since gcc-4.9. This error message indicates the C compiler
      you're using does not implement OpenMP 4.0 task dependencies.

    - "couldn't find lapacke.h header.": KaStORS PLASMA benchmarks
        need the lapacke.h header file, that comes with the dev
        version of the lapacke library.

    - "couldn't find cblas_dgemm in -lcblas.": KaStORS PLASMA
        benchmarks need cblas_dgemm() and friends, that can be found
        in the libcblas library. "libatlas-base-dev" is an example of
        libraries providing libcblas.

Tests
-----

The usual::

    $> make check

can be use to check if backend compiler correctly compile KaStORS benchmarks.
Results are checked with some relative error specific for each codes.

Run
---

To run the current compiler on the same exemple than in the IWOMP2014 paper::

    $> make run

Blas installation
-----------------
Configure will try to find cblas/openBlas implementation for blas.
If you have a specific implementation to use, please concider using the
-with-blas flag::

    $> mkdir build && cd build
    $> ../configure --with-blas=/usr/lib/libgslcblas.a
    $> ../configure --with-blas="/usr/lib/libcblas.a /usr/lib/libatlas.a"

Default dynamic flags detection is possible for cblas and openblas::

    $> ../configure --with-blas=cblas
    $> ../configure --with-blas=openblas

If not Blas implementation exists on your computer, you can install openBlas::

    $> mkdir /path/to/kastors/third_party && cd /path/to/kastors/third_party
    $> git clone git://github.com/xianyi/OpenBLAS
    $> cd OpenBLAS
    $> make USE_THREAD=0

and run configure::
    $> cd /path/to/kastors/build
    $> ../configure --with-blas=/path/to/kastors/third_party/OpenBLAS/libopenblas.a

Enjoy!!

Warning: Default openblas implementation may create multiple threads. To fix it,
you can compile OpenBLAS with USE_THREAD=0 or use::

    $> export OPENBLAS_NUM_THREADS=1
